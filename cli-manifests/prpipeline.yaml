pipeline:
  name: cicd-gitops-pipeline
  identifier: cicdgitopspipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubconnector
        build: <+input>
  stages:
    - stage:
        name: ci-stage
        identifier: cistage
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Owasp
                  name: Run OWASP Scan
                  identifier: Run_OWASP_Scan
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      workspace: apps/podinfo
                      name: Harness GitOps Workshop
                      variant: main
                    advanced:
                      log:
                        level: info
                      fail_on_severity: none  
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry
                  identifier: BuildAndPushDockerRegistry
                  spec:
                    connectorRef: docker_connector
                    repo: <+pipeline.variables.imageRepo>
                    tags:
                      - <+pipeline.variables.imageTag>
                    dockerfile: apps/podinfo/Dockerfile
                    context: apps/podinfo
    - stage:
        name: DeployDev
        identifier: DeployDev
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          gitOpsEnabled: true
          service:
            serviceRef: podinfoservice
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: UpdateDeploymentArtifact
                  identifier: UpdateDeploymentArtifact
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          export IMAGE_TAG="<+pipeline.variables.imageRepo>:<+pipeline.variables.imageTag>"
                          rm -rf harness-gitops-workshop
                          git config --global user.email ci-bot@argocd.com && git config --global user.name ci-bot
                          echo "cloning repo..."
                          GITHUBPAT=<+secrets.getValue("github_pat")>
                          git clone https://oauth2:$GITHUBPAT@github.com/GITHUB_USERNAME/harness-gitops-workshop.git
                          cd harness-gitops-workshop
                          ls
                          FILE_PATH="configs/git-generator-files-discovery/apps/podinfo/deployment.yaml"

                          # Detect OS and set the sed in-place edit command accordingly
                          if [[ "$OSTYPE" == "darwin"* ]]; then
                              SED_COMMAND="sed -i ''"
                          else
                              SED_COMMAND="sed -i"
                          fi

                          echo "Updating image tag in deployment YAML"
                          $SED_COMMAND "s|image: .*|image: $IMAGE_TAG|g" "$FILE_PATH"

                          echo "Committing and pushing"
                          git add .
                          git commit -m "Update latest deployment artifact"
                          git push
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: GitOpsUpdateReleaseRepo
                  name: Update Release Repo
                  identifier: updateReleaseRepo
                  timeout: 10m
                  spec:
                    variables:
                      - name: cluster.name
                        type: String
                        value: <+input>
                      - name: cluster.owner
                        type: String
                        value: <+input>
                      - name: cluster.address
                        type: String
                        value: <+input>
                      - name: cluster.namespace
                        type: String
                        value: <+input>
                      - name: asset_id
                        type: String
                        value: <+trigger.gitUser>-<+trigger.commitSha>
                      - name: aws_account
                        type: String
                        value: <+input>
              - step:
                  type: MergePR
                  name: Merge PR
                  identifier: mergePR
                  spec:
                    deleteSourceBranch: true
                  timeout: 10m
              - step:
                  type: GitOpsFetchLinkedApps
                  name: Fetch Linked Apps
                  identifier: fetchLinkedApps
                  timeout: 10m
                  spec: {}
            rollbackSteps: []
          environment:
            environmentRef: dev
            deployToAll: false
            gitOpsClusters:
              - identifier: gitopscluster
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: ApprovePromoteProd
        identifier: ApprovePromoteProd
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: ApprovePromoteProd
                  identifier: ApprovePromoteProd
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
        tags: {}
    - stage:
        name: DeployProd
        identifier: DeployProd
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          gitOpsEnabled: true
          service:
            serviceRef: podinfoservice
          execution:
            steps:
              - step:
                  type: GitOpsUpdateReleaseRepo
                  name: Update Release Repo
                  identifier: updateReleaseRepo
                  timeout: 10m
                  spec:
                    variables:
                      - name: cluster.name
                        type: String
                        value: <+input>
                      - name: cluster.owner
                        type: String
                        value: <+input>
                      - name: cluster.address
                        type: String
                        value: <+input>
                      - name: cluster.namespace
                        type: String
                        value: <+input>
                      - name: asset_id
                        type: String
                        value: <+trigger.gitUser>-<+trigger.commitSha>
                      - name: aws_account
                        type: String
                        value: <+input>
              - step:
                  type: MergePR
                  name: Merge PR
                  identifier: mergePR
                  spec:
                    deleteSourceBranch: true
                  timeout: 10m
              - step:
                  type: GitOpsFetchLinkedApps
                  name: Fetch Linked Apps
                  identifier: fetchLinkedApps
                  timeout: 10m
                  spec: {}
            rollbackSteps: []
          environment:
            environmentRef: prod
            deployToAll: false
            gitOpsClusters:
              - identifier: gitopscluster
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: imageRepo
      type: String
      description: ""
      required: false
      value: ghcr.io/stefanprodan/podinfo
    - name: imageTag
      type: String
      description: ""
      required: false
      value: 6.5.3
